from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery
from aiogram.filters import Command, CommandStart
from lexicon.lexicon import LEXICON
from aiogram import Router, F
from keyboards.keyboard import create_keyboard_start_adm
from keyboards.inline_keyboard_adm import inline_keyboard_parameters, inline_keyboard_cost, inline_keyboard_cancel, \
    inline_keyboard_newsletter, inline_keyboard_confirmnslt
from service.calculation import calculate_cost
from service.send_newsletter import send_newsletter
from aiogram.fsm.context import FSMContext
from fsm import fsm
from aiogram.filters import StateFilter
from db import db
from filters import filters


router = Router()
# router.message.filter(filters.filter_adm(F.from_user.id))

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≤ router
router.message.filter(filters.message_admin_filter)
router.callback_query.filter(filters.callback_query_admin_filter)


# –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å—Ç–∞—Ç—É—Å—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –æ—Å—Ç–∞–≤—à–µ–π—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(CommandStart())
async def process_start_command(message: Message, state: FSMContext):
    await state.clear()
    await db.add_client(message.chat.id, message.from_user.username)
    await message.delete()
    await message.answer(text=LEXICON[message.text](message),
                         reply_markup=create_keyboard_start_adm(message.text))


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
@router.message(Command(commands='help'))
async def process_help_command(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(text=LEXICON['/help'], reply_markup=ReplyKeyboardRemove())


# –û–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å
@router.message(F.text == '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å')
async def start_calculate(message: Message | CallbackQuery, state: FSMContext):
    await state.set_state(fsm.FSMadmins.calculation)
    if isinstance(message, Message):
        s = f'{LEXICON["parameters"](await db.give_rate(), await db.give_commission())}'
        await message.answer(text='<b>–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ —é–∞–Ω—è—Ö.</b>\n\n'
                                  '<i>*–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <b>–ø—Ä–æ–±–µ–ª</b> –¥–ª—è —Ä–∞—Å—Å—á–µ—Ç–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–∑–∏—Ü–∏–π.</i>',
                             reply_markup=await inline_keyboard_cancel())
    else:
        await message.message.answer(text='<b>–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ —é–∞–Ω—è—Ö.</b>\n\n'
                                          '<i>*–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <b>–ø—Ä–æ–±–µ–ª</b> –¥–ª—è —Ä–∞—Å—Å—á–µ—Ç–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–∑–∏—Ü–∏–π.</i>',
                                     reply_markup=await inline_keyboard_cancel())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ü–µ–Ω—ã
@router.message(StateFilter(fsm.FSMadmins.calculation))
async def give_cost(message: Message, state: FSMContext):
    cost = await calculate_cost(message.text, message)
    keyboard = await inline_keyboard_cost()
    await message.answer(text=f'–ö—É—Ä—Å: <b>1¬• | {await db.give_rate()}‚ÇΩ</b>\n' \
                              f'–ö–æ–º–∏—Å—Å–∏—è: <b>{await db.give_commission()}%</b>\n\n')
    await message.answer(text=f'{cost}', reply_markup=keyboard)
    await state.set_state()


# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π —Ä–∞—Å—Å—á–µ—Ç —Ü–µ–Ω—ã
@router.callback_query(F.data == 'calculate_again')
async def calculate_again(callback: CallbackQuery, state: FSMContext):
    # await callback.message.delete()
    await callback.message.delete_reply_markup()
    await start_calculate(callback, state)


@router.callback_query(F.data == 'back')
async def back(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    # await callback.message.delete()
    await callback.message.delete_reply_markup()
    await callback.message.answer(text=LEXICON['main_menu'],
                                  reply_markup=create_keyboard_start_adm('/start'))


@router.message(F.text == '–ö—É—Ä—Å | –ö–æ–º–∏—Å—Å–∏—è')
async def rate(message: Message):
    await message.answer(text=LEXICON['parameters'](await db.give_rate(), await db.give_commission()),
                         reply_markup=await inline_keyboard_parameters())


@router.callback_query(F.data == 'change_rate')
async def change_rate(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await state.set_state(fsm.FSMadmins.change_rate)
    await callback.message.answer(text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å üí±')


@router.message(StateFilter(fsm.FSMadmins.change_rate))
async def process_change_rate(message: Message, state: FSMContext):
    if filters.check_nums(message.text):
        await db.change_rate(float(message.text))
        await message.answer(text=LEXICON['parameters'](await db.give_rate(), await db.give_commission()),
                             reply_markup=await inline_keyboard_parameters())
        await state.clear()
    else:
        await message.answer(text='–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. \n\n–î—Ä–æ–±—å —á–µ—Ä–µ–∑ ".", –µ—Å–ª–∏ —á—Ç–æ.')


@router.callback_query(F.data == 'change_commission')
async def change_rate(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await state.set_state(fsm.FSMadmins.change_commission)
    await callback.message.answer(text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∫–æ–º–∏—Å—Å–∏—é %')


@router.message(StateFilter(fsm.FSMadmins.change_commission))
async def process_change_rate(message: Message, state: FSMContext):
    if filters.check_nums(message.text):
        await db.change_commission(float(message.text))
        await message.answer(text=LEXICON['parameters'](await db.give_rate(), await db.give_commission()),
                             reply_markup=await inline_keyboard_parameters())
        await state.clear()
    else:
        await message.answer(text='–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. \n\n–î—Ä–æ–±—å —á–µ—Ä–µ–∑ ".", –µ—Å–ª–∏ —á—Ç–æ.')



@router.message(F.text == '–°—Ç–∞—Ç—å–∏')
async def rate(message: Message):
    await message.answer(text=
                         f"<b>1.</b> <b><a href='https://telegra.ph/Ispolzovanie-prilozheniya-Poizon-06-25'>" \
                         f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.</a></b>‚úàÔ∏è\n" \
                         f"<i><a href='tg://user?id={'https://apps.apple.com/app/id1012871328'}'>–°–∫–∞—á–∞—Ç—å IOS</a></i> | "
                         f"<i><a href='tg://user?id={'https://www.anxinapk.com/rj/12201303.html'}'>–°–∫–∞—á–∞—Ç—å ANDROID</a></i>\n\n" \
                         f"<b>2.</b> <b><a href='https://telegra.ph/Kak-sdelat-zakaz-06-25'>" \
                         f"–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑?</a></b>‚úàÔ∏è\n\n" \
                         f"<b>3.</b> <b><a href='https://telegra.ph/FAQ-06-25-11'>"
                         f"–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</a></b>‚úàÔ∏è",
                         reply_markup=create_keyboard_start_adm('/start'))


@router.message(F.text == '–†–∞—Å—Å—ã–ª–∫–∞')
async def rate(message: Message):
    await message.answer(text=f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{await db.give_active_users()}</b>',
                         reply_markup=await inline_keyboard_newsletter())


@router.callback_query(F.data == 'make_newsletter')
async def make_newsletter(callback: CallbackQuery, state: FSMContext):
    await state.set_state(fsm.FSMadmins.newsletter)
    await callback.message.answer(text='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏.')


@router.message(StateFilter(fsm.FSMadmins.newsletter))
async def confirmation_newsletter(message: Message):
    await message.send_copy(chat_id=message.chat.id, reply_markup=await inline_keyboard_confirmnslt())


@router.callback_query(F.data == 'confirm_newsletter')
async def make_newsletter(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await state.clear()
    await send_newsletter(callback.bot, callback.message.message_id)
    await callback.message.answer(text=f'<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ–ø–æ–≤–µ—â–µ–Ω—ã.</b>\n\n'
                                       f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{await db.give_active_users()}</b>',
                                  reply_markup=await inline_keyboard_newsletter())
    await state.clear()


@router.callback_query(F.data == 'cancel_newsletter')
async def make_newsletter(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.answer(text=f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{await db.give_active_users()}</b>',
                                  reply_markup=await inline_keyboard_newsletter())
